classType car.FrequencyComputationClass
blockdiagramSpecification Main {
	methodBody computeFrequency {
		outPin active {
			connection_11
		}
	}
	literal Numeric "1.0" at (71, 273) size (49, 0) {
		outPin {
			connection_2
		}
	}
	literal Numeric "1.9" at (71, 443) size (49, 0) {
		outPin {
			connection_4
		}
	}
	lessOrEqual at (221, 216) {
		inPin connection_54 {
			bendpoints (0, 110)
		}
		inPin connection_2 {
			bendpoints (90, 0), (90, -40)
		}
		outPin {
			connection_55, connection_45
		}
	}
	and at (411, 226) {
		inPin connection_49 {
			bendpoints (10, 0), (10, 60)
		}
		inPin connection_6 {
			bendpoints (60, 0), (60, -140)
		}
		outPin {
			connection_12
		}
	}
	greaterOrEqual at (291, 376) {
		inPin connection_25
		inPin connection_4 {
			bendpoints (140, 0), (140, -50)
		}
		outPin {
			connection_6
		}
	}
	literal Numeric "1.0" at (71, 323) size (49, 0) {
		outPin {
			connection_7
		}
	}
	greaterOrEqual at (291, 306) {
		inPin connection_26 {
			bendpoints (280, 0), (280, -70)
		}
		inPin connection_7
		outPin {
			connection_56
		}
	}
	and at (351, 266) {
		inPin connection_55 {
			bendpoints (80, 0), (80, 40)
		}
		inPin connection_56 {
			bendpoints (10, 0), (10, -30)
		}
		outPin {
			connection_14
		}
	}
	ifElse at (471, 231) {
		inPin connection_12
		ifControlFlowOutPin {
			connection_29
		}
		elseControlFlowOutPin {
			connection_13
		}
		sequenceCall at (-10, -30) {
			inPin connection_11
		}
	}
	ifElse at (491, 401) {
		inPin connection_14 {
			bendpoints (60, 0), (60, 130)
		}
		ifControlFlowOutPin {
			connection_31
		}
		elseControlFlowOutPin {
			connection_34
		}
		sequenceCall at (0, -30) {
			inPin connection_13
		}
	}
	literal Numeric "10.0" at (661, 263) size (69, 0) {
		outPin {
			connection_30
		}
	}
	literal Numeric "0.0" at (421, 493) size (49, 0) {
		outPin {
			connection_35
		}
	}
	simpleIdentifier frequency_lookup at (601, 551) {
		label at (0, 1)
		inPin connection_33 {
			bendpoints (280, 0), (280, 190)
		}
		outPin {
			connection_32
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier computeFrequency.v at (-39, 95) {
		label at (0, -51)
		outPin {
			connection_51
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier computeFrequency.x at (-39, 375) {
		label at (0, -1)
		outPin {
			connection_26, connection_33, connection_25
		}
		sequenceCall {
			inPin
		}
	}
	return at (791, 265) {
		label at (0, 0)
		inPin connection_30
		sequenceCall at (-30, -34) {
			inPin connection_29
		}
	}
	return at (931, 445) {
		label at (0, 0)
		inPin connection_32 {
			bendpoints (250, 0), (250, -120)
		}
		sequenceCall at (-10, -44) {
			inPin connection_31
		}
	}
	return at (551, 495) {
		label at (0, 0)
		inPin connection_35
		sequenceCall at (-20, -34) {
			inPin connection_34 {
				bendpoints (0, 30)
			}
		}
	}
	and at (341, 156) {
		inPin connection_48 {
			bendpoints (10, 0)
		}
		inPin connection_45 {
			bendpoints (80, 0)
		}
		outPin {
			connection_49
		}
	}
	greater at (291, 106) {
		inPin connection_53
		inPin connection_47
		outPin {
			connection_48
		}
	}
	literal Numeric "0.0" at (181, 123) size (49, 0) {
		outPin {
			connection_47
		}
	}
	division at (101, 96) {
		inPin connection_51
		inPin connection_52 {
			bendpoints (80, 0), (80, -30)
		}
		outPin {
			connection_54, connection_53
		}
	}
	literal Numeric "3.6" at (-39, 143) size (49, 0) {
		outPin {
			connection_52
		}
	}
}