classType car.FrequencyComputationClass
blockdiagramSpecification Main {
	methodBody computeFrequency {
		outPin active {
			connection_11
		}
	}
	literal Numeric "1.0" at (231, 283) size (49, 0) {
		outPin {
			connection_2
		}
	}
	literal Numeric "1.9" at (231, 453) size (49, 0) {
		outPin {
			connection_4
		}
	}
	lessOrEqual at (381, 226) {
		inPin connection_54 {
			bendpoints (0, 110)
		}
		inPin connection_2 {
			bendpoints (90, 0), (90, -40)
		}
		outPin {
			connection_45
		}
	}
	and at (571, 236) {
		inPin connection_49 {
			bendpoints (10, 0), (10, 60)
		}
		inPin connection_6 {
			bendpoints (60, 0), (60, -140)
		}
		outPin {
			connection_12
		}
	}
	greaterOrEqual at (451, 386) {
		inPin connection_25
		inPin connection_4 {
			bendpoints (140, 0), (140, -50)
		}
		outPin {
			connection_6
		}
	}
	literal Numeric "1.0" at (231, 333) size (49, 0) {
		outPin {
			connection_7
		}
	}
	greaterOrEqual at (451, 316) {
		inPin connection_26 {
			bendpoints (280, 0), (280, -70)
		}
		inPin connection_7
		outPin {
			connection_56
		}
	}
	and at (511, 276) {
		inPin connection_57 {
			bendpoints (10, 0), (10, 70), (-40, 70), (-40, 100)
		}
		inPin connection_56 {
			bendpoints (10, 0), (10, -30)
		}
		outPin {
			connection_14
		}
	}
	ifElse at (631, 241) {
		inPin connection_12
		ifControlFlowOutPin {
			connection_29
		}
		elseControlFlowOutPin {
			connection_13
		}
		sequenceCall at (-10, -30) {
			inPin connection_11
		}
	}
	ifElse at (651, 411) {
		inPin connection_14 {
			bendpoints (60, 0), (60, 130)
		}
		ifControlFlowOutPin {
			connection_31
		}
		elseControlFlowOutPin {
			connection_34
		}
		sequenceCall at (0, -30) {
			inPin connection_13
		}
	}
	literal Numeric "10.0" at (821, 273) size (69, 0) {
		outPin {
			connection_30
		}
	}
	literal Numeric "0.0" at (581, 503) size (49, 0) {
		outPin {
			connection_35
		}
	}
	simpleIdentifier frequency_lookup at (761, 561) {
		label at (0, 1)
		inPin connection_33 {
			bendpoints (280, 0), (280, 190)
		}
		outPin {
			connection_32
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier computeFrequency.v at (121, 105) {
		label at (0, -51)
		outPin {
			connection_51
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier computeFrequency.x at (121, 385) {
		label at (0, -1)
		outPin {
			connection_26, connection_33, connection_25
		}
		sequenceCall {
			inPin
		}
	}
	return at (951, 275) {
		label at (0, 0)
		inPin connection_30
		sequenceCall at (-30, -34) {
			inPin connection_29
		}
	}
	return at (1091, 455) {
		label at (0, 0)
		inPin connection_32 {
			bendpoints (250, 0), (250, -120)
		}
		sequenceCall at (-10, -44) {
			inPin connection_31
		}
	}
	return at (711, 505) {
		label at (0, 0)
		inPin connection_35
		sequenceCall at (-20, -34) {
			inPin connection_34 {
				bendpoints (0, 30)
			}
		}
	}
	and at (501, 166) {
		inPin connection_48 {
			bendpoints (10, 0)
		}
		inPin connection_45 {
			bendpoints (80, 0)
		}
		outPin {
			connection_57, connection_49
		}
	}
	greater at (451, 116) {
		inPin connection_53
		inPin connection_47
		outPin {
			connection_48
		}
	}
	literal Numeric "0.0" at (341, 133) size (49, 0) {
		outPin {
			connection_47
		}
	}
	division at (261, 106) {
		inPin connection_51
		inPin connection_52 {
			bendpoints (80, 0), (80, -30)
		}
		outPin {
			connection_54, connection_53
		}
	}
	literal Numeric "3.6" at (121, 153) size (49, 0) {
		outPin {
			connection_52
		}
	}
}