classType car.FrequencyComputationClass
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_11
		}
	}
	literal Numeric "1.0" at (101, 273) size (49, 0) {
		outPin {
			connection_2
		}
	}
	literal Numeric "1.9" at (101, 453) size (49, 0) {
		outPin {
			connection_4
		}
	}
	lessOrEqual at (291, 216) {
		inPin connection_24
		inPin connection_2 {
			bendpoints (90, 0), (90, -40)
		}
		outPin {
			connection_37, connection_5
		}
	}
	and at (381, 226) {
		inPin connection_5
		inPin connection_6 {
			bendpoints (20, 0), (20, -140)
		}
		outPin {
			connection_12
		}
	}
	greaterOrEqual at (291, 376) {
		inPin connection_25
		inPin connection_4 {
			bendpoints (90, 0), (90, -60)
		}
		outPin {
			connection_6
		}
	}
	literal Numeric "1.0" at (111, 43) size (49, 0) {
		outPin {
			connection_7
		}
	}
	greaterOrEqual at (291, 26) {
		inPin connection_26 {
			bendpoints (120, 0), (120, -350)
		}
		inPin connection_7
		outPin {
			connection_36
		}
	}
	and at (381, 36) {
		inPin connection_36
		inPin connection_37 {
			bendpoints (20, 0), (20, -170)
		}
		outPin {
			connection_14
		}
	}
	ifElse at (471, 231) {
		inPin connection_12
		ifControlFlowOutPin {
			connection_29
		}
		elseControlFlowOutPin {
			connection_13
		}
		sequenceCall {
			inPin connection_11
		}
	}
	ifElse at (471, 101) {
		inPin connection_14 {
			bendpoints (0, 60)
		}
		ifControlFlowOutPin {
			connection_31
		}
		elseControlFlowOutPin {
			connection_34
		}
		sequenceCall at (0, -20) {
			inPin connection_13 {
				bendpoints (0, 90), (500, 90), (500, -210), (-40, -210), (-40, -180)
			}
		}
	}
	literal Numeric "10.0" at (661, 263) size (69, 0) {
		outPin {
			connection_30
		}
	}
	literal Numeric "0.0" at (681, 163) size (49, 0) {
		outPin {
			connection_35
		}
	}
	simpleIdentifier frequency_lookup at (471, -29) {
		label at (0, 1)
		inPin connection_33 {
			bendpoints (120, 0), (120, -390)
		}
		outPin {
			connection_32
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.v at (101, 215) {
		label at (0, -1)
		outPin {
			connection_24
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.x at (101, 375) {
		label at (0, -1)
		outPin {
			connection_26, connection_33, connection_25
		}
		sequenceCall {
			inPin
		}
	}
	return at (791, 265) {
		label at (0, 0)
		inPin connection_30
		sequenceCall at (-30, -34) {
			inPin connection_29
		}
	}
	return at (851, -15) {
		label at (0, 0)
		inPin connection_32
		sequenceCall at (-10, -44) {
			inPin connection_31 {
				bendpoints (300, 0), (300, -160)
			}
		}
	}
	return at (801, 165) {
		label at (0, 0)
		inPin connection_35
		sequenceCall at (-20, -34) {
			inPin connection_34
		}
	}
}