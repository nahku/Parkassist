classType car.driveModel
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_87, connection_49, connection_13, connection_66, connection_25, connection_80
		}
	}
	multiplication at (561, 86) {
		inPin connection_91 {
			bendpoints (370, 0), (370, 90)
		}
		inPin connection_90 {
			bendpoints (390, 0), (390, 50)
		}
		inPin connection_89
		outPin {
			connection_12
		}
	}
	simpleIdentifier b at (41, 165) {
		label at (0, -1)
		outPin {
			connection_9
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier c at (41, 95) {
		label at (0, -1)
		outPin {
			connection_1
		}
		sequenceCall {
			inPin
		}
	}
	multiplication at (271, 166) {
		inPin connection_9
		inPin connection_82 {
			bendpoints (150, 0), (150, -40)
		}
		outPin {
			connection_2
		}
	}
	simpleIdentifier resources.TimeTick.dTs at (81, -5) {
		label at (-50, -1)
		inPin outPin {
			connection_92, connection_91
		}
		sequenceCall {
			inPin
		}
	}
	subtraction at (351, 96) {
		inPin connection_11
		inPin connection_2 {
			bendpoints (20, 0), (20, -60)
		}
		outPin {
			connection_89, connection_50
		}
	}
	negation at (271, 91) {
		inPin connection_1
		outPin {
			connection_11
		}
	}
	simpleIdentifier v at (731, 105) {
		label at (-40, 9)
		inPin connection_14
		outPin {
			connection_74, connection_93, connection_60
		}
		sequenceCall at (-20, -64) {
			inPin connection_13
		}
	}
	addition at (651, 96) {
		inPin connection_12
		inPin connection_74 {
			bendpoints (40, 0), (40, 110), (-140, 110), (-140, 10)
		}
		outPin {
			connection_14
		}
	}
	multiplication at (851, -4) {
		inPin connection_92
		inPin connection_93 {
			bendpoints (40, 0), (40, -90)
		}
		outPin {
			connection_58
		}
	}
	addition at (1261, 16) {
		inPin connection_59
		inPin connection_27 {
			bendpoints (80, 0), (80, 90), (-160, 90)
		}
		outPin {
			connection_26
		}
	}
	simpleIdentifier s at (1371, 25) {
		label at (0, -1)
		inPin connection_26
		outPin {
			connection_77, connection_27
		}
		sequenceCall at (-20, -44) {
			inPin connection_25
		}
	}
	simpleIdentifier acc at (1141, 255) {
		label at (0, -1)
		inPin connection_50 {
			bendpoints (60, 0), (60, 150)
		}
		outPin sequenceCall at (-10, -24) {
			inPin connection_49
		}
	}
	division at (1041, 6) {
		inPin connection_58
		inPin connection_57 {
			bendpoints (80, 0), (80, -30)
		}
		outPin {
			connection_59
		}
	}
	literal Numeric "3.6" at (861, 53) size (49, 0) {
		outPin {
			connection_57
		}
	}
	literal Numeric "0.29" at (841, 123) size (69, 0) {
		outPin {
			connection_61
		}
	}
	less at (961, 106) {
		inPin connection_60
		inPin connection_61
		outPin {
			connection_67
		}
	}
	if at (1031, 111) {
		inPin connection_67
		ifControlFlowOutPin {
			connection_71
		}
		sequenceCall at (-20, -50) {
			inPin connection_66
		}
	}
	simpleIdentifier v at (1151, 165) {
		label at (-40, 9)
		inPin connection_72
		outPin sequenceCall at (-30, -54) {
			inPin connection_71
		}
	}
	literal Numeric "0.0" at (861, 163) size (49, 0) {
		outPin {
			connection_72
		}
	}
	simpleIdentifier target_position at (91, -75) {
		label at (-80, 9)
		outPin {
			connection_76
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier ultrasonic_distance at (1611, -65) {
		label at (0, -1)
		inPin connection_79
		outPin sequenceCall at (-10, -44) {
			inPin connection_80
		}
	}
	subtraction at (1531, -74) {
		inPin connection_76
		inPin connection_77 {
			bendpoints (80, 0), (80, -80)
		}
		outPin {
			connection_79
		}
	}
	literal Numeric "3.6" at (31, 43) size (49, 0) {
		outPin {
			connection_90
		}
	}
	methodArgumentIdentifier calc.p at (41, 225) {
		label at (0, -1)
		outPin {
			connection_84, connection_82
		}
		sequenceCall {
			inPin
		}
	}
	literal Numeric "-0.14" at (31, 283) size (69, 0) {
		outPin {
			connection_83
		}
	}
	equal at (271, 266) {
		inPin connection_84 {
			bendpoints (150, 0), (150, 40)
		}
		inPin connection_83
		outPin {
			connection_88
		}
	}
	simpleIdentifier v at (471, 315) {
		label at (-40, 9)
		inPin connection_86
		outPin sequenceCall at (-10, -44) {
			inPin connection_85
		}
	}
	literal Numeric "10.0" at (31, 313) size (69, 0) {
		outPin {
			connection_86
		}
	}
	if at (361, 271) {
		inPin connection_88
		ifControlFlowOutPin {
			connection_85
		}
		sequenceCall at (0, -40) {
			inPin connection_87
		}
	}
}